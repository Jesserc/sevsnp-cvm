// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/RsaVerify.sol";
import "../src/RsaVerifyOptimized.sol";

import "./FIPS186_2.sol";
import "./FIPS186_4.sol";
import "./OpenSSL.sol";
import "./RFC8017.sol";

contract RsaVerifyTest is Test {
    function test_suites(
        function(bytes memory, bytes memory, bytes memory, bytes memory)
            returns (bool) _verifier
    ) internal {
        {
            VectorTest[] memory vt = new FIPS186_2().suite();
            for (uint256 i = 0; i < vt.length; i++) {
                assertEq(
                    _verifier(vt[i].Msg, vt[i].S, vt[i].e, vt[i].n),
                    vt[i].pass
                );
            }
        }
        {
            VectorTest[] memory vt = new FIPS186_4().suite();
            for (uint256 i = 0; i < vt.length; i++) {
                assertEq(
                    _verifier(vt[i].Msg, vt[i].S, vt[i].e, vt[i].n),
                    vt[i].pass
                );
            }
        }
        {
            VectorTest[] memory vt = new OpenSSL().suite();
            for (uint256 i = 0; i < vt.length; i++) {
                assertEq(
                    _verifier(vt[i].Msg, vt[i].S, vt[i].e, vt[i].n),
                    vt[i].pass
                );
            }
        }
        {
            VectorTest[] memory vt = new RFC8017().suite();
            for (uint256 i = 0; i < vt.length; i++) {
                assertEq(
                    _verifier(vt[i].Msg, vt[i].S, vt[i].e, vt[i].n),
                    vt[i].pass
                );
            }
        }
    }

    function pkcs1Sha256Raw_original(
        bytes memory Msg,
        bytes memory S,
        bytes memory e,
        bytes memory n
    ) internal view returns (bool) {
        return RsaVerify.pkcs1Sha256Raw(Msg, S, e, n);
    }

    function pkcs1Sha256Raw_optimized(
        bytes memory Msg,
        bytes memory S,
        bytes memory e,
        bytes memory n
    ) internal view returns (bool) {
        return RsaVerifyOptimized.pkcs1Sha256Raw(Msg, S, e, n);
    }

    function test_suites_original() public {
        test_suites(pkcs1Sha256Raw_original);
    }

    function test_suites_optimized() public {
        test_suites(pkcs1Sha256Raw_optimized);
    }

    function test_gas_original() public {
        bytes
            memory e = hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000010001";

        bytes
            memory Msg = hex"";

        bytes
            memory S = hex"599f1005abe5ea518b1bd4c33caf338eb4d29b251e1fd73ce42c35970ece37da8a2ee58d1d3bac64716786989e2c849bf61e4c00dffb11a2ffba2aed3c02bbac8237d196e89246bd850090aa9275f191a8cd9460f7d81f62c3b73c82aab6dee1350c8fe51b3d6d06926d4f2594ac312cfdda5070a32b89509c8076f7e410559dfabaedfddce0531f4c08139e53a5aa52c9ab0842f0e0a067453baf5c67335c40494fa69ef1663735403064a065ba986ddbe2c538695330edeacb21a0fbd4582e1d57e5d10ad605ce78d8cff58e1b1f30968227e23976dbc864fbcc6ff708aff30755bd6fc67cc7f108c94af3431f14d22acfcd50a2211cede585f7278f2a51cf";

        bytes
            memory n = hex"d8d06b1107705d4cd5cb6a7e499eec063c5b55de224c6344409bbf3adfc2d0d0b35c80d3e8330401e5592d2a1659c5baa1743cd61fb2416b70fa3156fd23e01b814648bd549d53bc65a93cd2d868bd093475b643a3ef65b283a739f5df3d42f44fd0201eda89a54af7b427f24512dd0b4320175b40ca365b323f1b1ded99989f462d3253e6ff44d22e65dd2e16658e76bcccd9695a5fc70fb4fece6d4737283c6a88acc3a75ffee4bf98fbb22b2a64a36ae9f3fee0c1ef2dbfed5f21c2916e85cd7f26525c3244dcc13f7478c5a5c1bf293324c6808825bf62bfd3c7271d9e6c2c4d1ee17b543bf2ad762a762a2ef5158e0fefdfdfd158649b16768fd585f91f";

        assertEq(RsaVerify.pkcs1Sha256Raw(Msg, S, e, n), true);
    }

    /*  function test_gas_optimized() public {
        bytes memory e = hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000000000"
            hex"0000000000000000000000000000000000000000000000000000000000010001";

        bytes memory Msg = bytes("hello world");

        bytes memory S = hex"079bed733b48d69bdb03076cb17d9809072a5a765460bc72072d687dba492afe"
            hex"951d75b814f561f253ee5cc0f3d703b6eab5b5df635b03a5437c0a5c17930981"
            hex"2f5b5c97650361c645bc99f806054de21eb187bc0a704ed38d3d4c2871a117c1"
            hex"9b6da7e9a3d808481c46b22652d15b899ad3792da5419e50ee38759560002388";

        bytes memory n = hex"DF3EDDE009B96BC5B03B48BD73FE70A3AD20EAF624D0DC1BA121A45CC7398937"
            hex"41B7CF82ACF1C91573EC8266538997C6699760148DE57E54983191ECA0176F51"
            hex"8E547B85FE0BB7D9E150DF19EEE734CF5338219C7F8F7B13B39F5384179F62C1"
            hex"35E544CB70BE7505751F34568E06981095AEEC4F3A887639718A3E11D48C240D";

        assertEq(RsaVerifyOptimized.pkcs1Sha256Raw(Msg, S, e, n), true);
    } */
}
